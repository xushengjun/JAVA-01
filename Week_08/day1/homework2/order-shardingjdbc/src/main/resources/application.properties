# 同一个主机，两个库，演示分库分表
# 数据源 db0,db1
sharding.jdbc.datasource.names=db0,db1
# 第一个数据库
sharding.jdbc.datasource.db0.type=com.zaxxer.hikari.HikariDataSource
sharding.jdbc.datasource.db0.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.db0.jdbc-url=jdbc:mysql://192.168.99.105:3306/ecommerce1?useUnicode=true&characterEncoding=utf-8
sharding.jdbc.datasource.db0.username=root
sharding.jdbc.datasource.db0.password=masterpwd

# 第二个数据库
sharding.jdbc.datasource.db1.type=com.zaxxer.hikari.HikariDataSource
sharding.jdbc.datasource.db1.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.db1.jdbc-url=jdbc:mysql://192.168.99.105:3306/ecommerce2?useUnicode=true&characterEncoding=utf-8
sharding.jdbc.datasource.db1.username=root
sharding.jdbc.datasource.db1.password=masterpwd


# user表和item表 分库不分表
#user表
# 分库策略
sharding.jdbc.config.sharding.tables.t_user.database-strategy.inline.sharding-column=id
sharding.jdbc.config.sharding.tables.t_user.database-strategy.inline.algorithm-expression=db$->{id%2}
sharding.jdbc.config.sharding.tables.t_user.actual-data-nodes=db$->{0..1}.t_user
# 配置主键生成策略
sharding.jdbc.config.sharding.tables.t_user.key-generator.column=id
sharding.jdbc.config.sharding.tables.t_user.key-generator.type=SNOWFLAKE

#item表
# 分库策略
sharding.jdbc.config.sharding.tables.t_item.database-strategy.inline.sharding-column=id
sharding.jdbc.config.sharding.tables.t_item.database-strategy.inline.algorithm-expression=db$->{id%2}
sharding.jdbc.config.sharding.tables.t_item.actual-data-nodes=db$->{0..1}.t_item
# 配置主键生成策略
sharding.jdbc.config.sharding.tables.t_item.key-generator.column=id
sharding.jdbc.config.sharding.tables.t_item.key-generator.type=SNOWFLAKE

#order表
# 分库策略
sharding.jdbc.config.sharding.tables.t_order.database-strategy.inline.sharding-column=user_id
sharding.jdbc.config.sharding.tables.t_order.database-strategy.inline.algorithm-expression=db$->{user_id%2}
#分表策略
sharding.jdbc.config.sharding.tables.t_order.actual-data-nodes=db$->{0..1}.t_order_$->{0..15}
sharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.sharding-column=id
sharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_$->{id%16}
# 配置主键生成策略
sharding.jdbc.config.sharding.tables.t_order.key-generator.column=id
sharding.jdbc.config.sharding.tables.t_order.key-generator.type=SNOWFLAKE


# 打印执行的数据库以及语句
sharding.jdbc.config.props.sql.show=true
spring.main.allow-bean-definition-overriding=true

sharding.binding-tables[0]=t_user,t_order